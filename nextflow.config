includeConfig 'methods.config'

manifest {
    author            = 'MalariaGEN and Broad Institute DSP Methods Collaboration'
    defaultBranch     = 'pf8_develop'
    recurseSubmodules = true
    mainScript        = 'main.nf'
    name              = 'snp-indel-calling'
}

params.queue_size = 2000

profiles {
    standard {
        docker {
            enabled = true
        }
    }

    // Basic configuration for an LSF environment at the Sanger
    sanger_lsf {

        docker {
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            runOptions = "--bind /lustre,/nfs,/software"
            envWhitelist = "REF_PATH"
        }

        process {
            cache = 'lenient'
            cpus = 1
            maxForks = 500
            memory = "2GB"
            queue = "normal"
            errorStrategy = {task.attempt <= 1 ? 'retry' : 'terminate'}
            maxRetries = 5
            withName:get_file_from_irods {
                maxRetries = 1
                maxForks = 20
                clusterOptions = "-R 'rusage[seqirods=100]'"
            }
            withName:bcftools_targets {
                memory = {8.GB * task.attempt}
            }
            withName:bqsr {
                memory = {8.GB * task.attempt + 2.GB}
            }
            withName:gatk_haplotype_caller {
                memory = {8.GB * task.attempt + 2.GB}
            }
            withName:genotype_gvcfs {
                memory = {16.GB * task.attempt + 2.GB}
            }
            withName:import_gvcfs {
                cpus = 4
                memory = {16.GB * task.attempt + 2.GB}
            }
            withName:mark_duplicates {
                memory = {8.GB * task.attempt}
            }
            withName:merge_bams {
                memory = {8.GB * task.attempt}
            }
            withName:remap_bam_file {
                cpus = 16
                memory = {16.GB * task.attempt}
            }
            withName:variant_annotation {
                memory = {16.GB * task.attempt}
            }
            withName:variant_filtration {
                memory = {16.GB * task.attempt}
            }
            withName:variant_recalibration_build_snp_model {
                memory = {128.GB * task.attempt}
            }
            withName:variant_recalibration_build_indel_model {
                memory = {128.GB * task.attempt}
            }
            withName:variant_recalibration_apply_model {
                memory = {64.GB * task.attempt}
            }
        }
        executor {
            name = "lsf"
            perJobMemLimit = true
            queueSize = params.queue_size
            jobName = { "pf_pipeline - $task.name - $task.hash" }
            pollInterval = "5 sec"
        }
    }
}
